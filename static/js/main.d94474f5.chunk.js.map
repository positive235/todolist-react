{"version":3,"sources":["components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","addedTasks","setAddedTasks","filteredTasks","setFilteredTasks","useState","filterName","setFilterName","editedTask","setEditedTask","filterToDo","e","preventDefault","target","name","filterFunction","filter","task","checked","isCheckedToDo","checkedTask","id","Number","currentTarget","checkedFalse","checkedTrue","editToDo","edited","prev","handleEdit","editChecked","value","handleDone","handleCancel","deleteToDo","className","onClick","onDragEnd","destination","taskList","startIndex","endIndex","splice","removed","reorder","source","index","droppableId","provided","snapshot","ref","innerRef","droppableProps","map","draggableId","isDragDisabled","draggableProps","dragHandleProps","icon","faCheck","type","placeholder","onChange","faTrashAlt","faCheckCircle","faWindowClose","faEdit","TodoList","newTask","setNewTask","useEffect","storedToDo","JSON","parse","localStorage","getItem","setItem","stringify","Math","random","faPlus","App","todayNew","Date","todayDay","getDay","todayDate","getDate","todayMonth","getMonth","todayYear","getFullYear","todayDayStr","todayMonthStr","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d94474f5.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faTrashAlt, faEdit, faWindowClose, faCheckCircle } from '@fortawesome/free-solid-svg-icons';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nconst Todo = ({ addedTasks, setAddedTasks, filteredTasks, setFilteredTasks })  => {\n\n  const [filterName, setFilterName] = useState('');\n  const [editedTask, setEditedTask] = useState({});\n\n  const filterToDo = (e) => {\n    e.preventDefault();\n    setFilterName(e.target.name);\n    filterFunction(e.target.name);\n  }\n\n  const filterFunction = (filterName) => {\n    switch (filterName) {\n      case \"all\":\n        setFilteredTasks(addedTasks);\n        break;\n      case \"active\":\n        setFilteredTasks(addedTasks.filter(task => task.checked === false));\n        break;\n      case \"done\":\n        setFilteredTasks(addedTasks.filter(task => task.checked === true));\n        break;\n      default:\n        setFilteredTasks(addedTasks.filter(task => task.checked === false));\n        break;\n    }\n  }\n\n  const isCheckedToDo = (e) => {\n    e.preventDefault();\n\n    const checkedTask = addedTasks.filter(task => task.id === Number(e.currentTarget.name))[0];\n    \n    if (checkedTask.checked === true) {\n      // if a task is unchecked (true -> false), move the task to the last of the unchecked tasks.\n      addedTasks.filter(task => task.id === Number(e.currentTarget.name))[0].checked = false;\n      const checkedFalse = addedTasks.filter(task => task.checked === false);\n      const checkedTrue = addedTasks.filter(task => task.checked === true);\n      addedTasks = [...checkedFalse, ...checkedTrue];\n\n    } else {\n      // if a task is checked (false -> true), move the task to the last\n      checkedTask.checked = true;\n      addedTasks = addedTasks.filter(task => task.id !== Number(e.currentTarget.name));\n      addedTasks = [...addedTasks, checkedTask];\n    }\n    \n    setAddedTasks(addedTasks);\n    filterFunction(filterName);\n  };\n\n  const editToDo = (e) => {\n    e.preventDefault();\n    addedTasks.filter(task => task.id === Number(e.currentTarget.name))[0].edited = true;\n    setAddedTasks(prev => [...prev]);\n    filterFunction(filterName);\n  }\n\n  const handleEdit = (e) => {\n    e.preventDefault();\n    const editChecked = addedTasks.filter(task => task.id === Number(e.currentTarget.name))[0].checked;\n    setEditedTask({name: e.currentTarget.value, checked: editChecked, edited: false, id: Number(e.currentTarget.name)});\n  }\n\n  const handleDone = (e) => {\n    e.preventDefault();\n    addedTasks.filter(task => task.id === Number(e.currentTarget.name))[0].name = editedTask.name;\n    addedTasks.filter(task => task.id === Number(e.currentTarget.name))[0].edited = editedTask.edited;\n    setAddedTasks(prev => [...prev]);\n    filterFunction(filterName);\n    setEditedTask({});\n  }\n\n  const handleCancel = (e) => {\n    e.preventDefault();\n    addedTasks.filter(task => task.id === Number(e.currentTarget.name))[0].edited = false;\n    setAddedTasks(prev => [...prev]);\n    filterFunction(filterName);\n  }\n\n  const deleteToDo = (e) => {\n      e.preventDefault();\n      addedTasks = addedTasks.filter(task => task.id !== Number(e.currentTarget.name));\n      setAddedTasks(addedTasks);\n      filterFunction(filterName);\n  };\n\n  const reorder = (taskList, startIndex, endIndex) => {\n    // credit: react beautiful dnd doc examples - https://github.com/atlassian/react-beautiful-dnd/blob/master/docs/about/examples.md\n    const [removed] = taskList.splice(startIndex, 1);\n    taskList.splice(endIndex, 0, removed);\n    return taskList;\n  };\n  \n  const onDragEnd = (e) => {    \n    // credit: react beautiful dnd doc examples - https://github.com/atlassian/react-beautiful-dnd/blob/master/docs/about/examples.md\n\n    // dropped outside the list\n    if (!e.destination) {\n      return;\n    }\n    addedTasks = reorder(addedTasks, e.source.index, e.destination.index);\n    setAddedTasks(addedTasks);\n    filterFunction(filterName);\n  }\n\n  return (\n    <div className=\"toDoOuterBlock\">\n      <div className=\"filterButtons\">\n        <button className=\"allButton\" name=\"all\" onClick={filterToDo}>All</button><button className=\"activeButton\" name=\"active\" onClick={filterToDo}>Active</button><button className=\"completedButton\" name=\"done\" onClick={filterToDo}>Done</button>\n      </div>\n      \n      <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId=\"list\">\n      {(provided, snapshot) => (\n        <div\n          ref={provided.innerRef}\n          {...provided.droppableProps}\n        >\n          \n          <div>\n            {filteredTasks.map((task, index) => (\n                <Draggable \n                  key={task.id} draggableId={task.name} index={index} \n                  isDragDisabled={task.checked ? true : false}>\n                    {(provided, snapshot) => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                      >\n                        <div className=\"toDoBlock\">\n                          {task.edited ? (<div></div>) : (<button className=\"toDoButton checkButton\" onClick={isCheckedToDo} name={task.id}><FontAwesomeIcon icon={faCheck} /></button>)}\n                          {task.edited ? (<input type=\"text\" className=\"editToDoBar\" name={task.id} placeholder={task.name} onChange={handleEdit}/>) : (<h3 className={task.checked ? \"isChecked\" : \"notChecked\"}>{task.name}</h3>)}\n                          {task.edited ? (<div></div>) : (<button className=\"toDoButton deleteButton\" name={task.id} id={index} onClick={deleteToDo}><FontAwesomeIcon name={task.id} icon={faTrashAlt} /></button>)}\n                          {task.edited ? (<div><button className=\"doneButton\" name={task.id} onClick={handleDone}><FontAwesomeIcon icon={faCheckCircle} /></button><button className=\"cancelButton\" name={task.id} onClick={handleCancel}><FontAwesomeIcon name={task.id} icon={faWindowClose} /></button></div>) : (<button className=\"toDoButton editButton\" name={task.id} onClick={editToDo}><FontAwesomeIcon name={task.id} icon={faEdit} /></button>)}\n                        </div>\n                      </div>\n                    )}\n                </Draggable>\n            ))}\n          </div>\n\n          {provided.placeholder}\n        </div>\n      )} \n      </Droppable> \n      </DragDropContext>\n    </div>\n  );\n}\n\nexport default Todo;","import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport Todo from './Todo';\n\nconst TodoList = () => {\n\n  const [newTask, setNewTask] = useState('');\n  const [addedTasks, setAddedTasks] = useState([]);\n  const [filteredTasks, setFilteredTasks] = useState(addedTasks);\n\n  useEffect(() => {\n    const storedToDo = JSON.parse(localStorage.getItem('toDoLists'));\n    if (storedToDo) setAddedTasks(storedToDo);\n    if (storedToDo) setFilteredTasks(storedToDo.filter(task => task.checked === false));\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('toDoLists', JSON.stringify(addedTasks));\n  }, [addedTasks]);\n\n\n  const newToDo = (e) => {\n    setNewTask(e.target.value);\n  };\n\n  const addToDo = (e) => {\n    e.preventDefault();\n    const id = Math.random() * 100\n    if (newTask !== \"\") {\n        setAddedTasks(prev => [...prev, {name: newTask, checked: false, edited: false, id: id}]);\n        setFilteredTasks(prev => [...prev, {name: newTask, checked: false, edited: false, id: id}]);\n    }\n    \n    setNewTask('');\n  };\n\n  return (\n    <div>\n      <form>\n        <div className=\"addBarButtonStyle\">\n          <input value={newTask} onChange={newToDo} type=\"text\" className=\"addToDoBar\" placeholder=\"Add To-Do\" />\n          <button onClick={addToDo} className=\"addButton\"><FontAwesomeIcon icon={faPlus} /></button>\n        </div>\n        <Todo addedTasks={addedTasks} setAddedTasks={setAddedTasks} filteredTasks={filteredTasks} setFilteredTasks={setFilteredTasks} />\n      </form>\n    </div>\n  );\n}\n\nexport default TodoList;\n","import './App.css';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n\n  const todayNew = new Date();\n  const todayDay = todayNew.getDay();\n  const todayDate = todayNew.getDate();\n  const todayMonth = todayNew.getMonth();\n  const todayYear = todayNew.getFullYear();\n\n  let todayDayStr = '';\n\n  switch(todayDay) {\n    case 0:\n      todayDayStr = 'Sun';\n      break;\n    case 1:\n      todayDayStr = 'Mon';\n      break;\n    case 2:\n      todayDayStr = 'Tue';\n      break;\n    case 3:\n      todayDayStr = 'Wed';\n      break;\n    case 4:\n      todayDayStr = 'Thu';\n      break;\n    case 5:\n      todayDayStr = 'Fri';\n      break;\n    case 6:\n      todayDayStr = 'Sat';\n      break;\n    default:\n      break;\n  }\n  \n  let todayMonthStr = '';\n\n  switch(todayMonth) {\n    case 0:\n      todayMonthStr = 'Jan';\n      break;\n    case 1:\n      todayMonthStr = 'Feb';\n      break;\n    case 2:\n      todayMonthStr = 'Mar';\n      break;\n    case 3:\n      todayMonthStr = 'Apr';\n      break;\n    case 4:\n      todayMonthStr = 'May';\n      break;\n    case 5:\n      todayMonthStr = 'Jun';\n      break;\n    case 6:\n      todayMonthStr = 'Jul';\n      break;\n    case 7:\n      todayMonthStr = 'Aug';\n      break;\n    case 8:\n      todayMonthStr = 'Sep';\n      break;\n    case 9:\n      todayMonthStr = 'Oct';\n      break;\n    case 10:\n      todayMonthStr = 'Nov';\n      break;\n    case 11:\n      todayMonthStr = 'Dec';\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"appTitle\">To-Do List</h1>\n      <h3 className=\"appTitle\">{`${todayDayStr} ${todayMonthStr} ${todayDate}, ${todayYear}`}</h3>\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}