{"version":3,"sources":["components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","addedTasks","setAddedTasks","useState","editedTask","setEditedTask","isCheckedToDo","e","preventDefault","target","name","checked","prev","editToDo","edited","handleEdit","value","handleDone","splice","handleCancel","deleteToDo","className","map","addedTask","index","onClick","type","placeholder","onChange","TodoList","newTask","setNewTask","useEffect","storedToDo","JSON","parse","localStorage","getItem","setItem","stringify","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42ae516d.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst Todo = ({ addedTasks, setAddedTasks })  => {\n\n  const [editedTask, setEditedTask] = useState({});\n\n  const isCheckedToDo = (e) => {\n    e.preventDefault();\n    addedTasks[e.target.name].checked = !addedTasks[e.target.name].checked;\n    setAddedTasks(prev => [...prev]);\n  };\n\n  const editToDo = (e) => {\n    e.preventDefault();\n    addedTasks[e.target.name].edited = true;\n    setAddedTasks(prev => [...prev]);\n  }\n\n  const handleEdit = (e) => {\n    e.preventDefault();\n    setEditedTask({\"name\":e.target.value,\"checked\":false,\"edited\":false});\n  }\n\n  const handleDone = (e) => {\n    e.preventDefault();\n    addedTasks.splice(e.target.name, 1, editedTask);\n    setAddedTasks(prev => [...prev]);\n    setEditedTask({});\n  }\n\n  const handleCancel = (e) => {\n    e.preventDefault();\n    addedTasks[e.target.name].edited = false;\n    setAddedTasks(prev => [...prev]);\n  }\n\n  const deleteToDo = (e) => {\n      e.preventDefault();\n      addedTasks.splice(e.target.name, 1);\n      setAddedTasks(prev => [...prev]);\n  };\n\n  return (\n    <div className=\"toDoOuterBlock\">\n      {addedTasks.map((addedTask, index) => (\n          <div className=\"toDoBlock\">\n            <button className=\"toDoButton checkButton\" name={index} onClick={isCheckedToDo}> V </button>\n            {addedTask.edited ? (<input type=\"text\" className=\"editToDoBar\" name={index} placeholder={addedTask.name} onChange={handleEdit}/>) : (<h3 className={addedTask.checked ? \"isChecked\" : \"notChecked\"}>{addedTask.name}</h3>)}\n            <button className=\"toDoButton deleteButton\" name={index} onClick={deleteToDo}> X </button>\n            {addedTask.edited ? (<div><button className=\"doneButton\" name={index} onClick={handleDone}>Done</button><button className=\"cancelButton\" name={index} onClick={handleCancel}>Cancel</button></div>) : (<button className=\"toDoButton editButton\" name={index} onClick={editToDo}>Edit</button>)}\n          </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Todo;","import React, { useState, useEffect } from 'react';\nimport Todo from './Todo';\n\nconst TodoList = () => {\n\n  const [newTask, setNewTask] = useState('');\n  const [addedTasks, setAddedTasks] = useState([]);\n  \n  useEffect(() => {\n    const storedToDo = JSON.parse(localStorage.getItem('toDoLists'));\n    if (storedToDo) setAddedTasks(storedToDo);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('toDoLists', JSON.stringify(addedTasks));\n  }, [addedTasks]);\n\n\n  const newToDo = (e) => {\n    setNewTask(e.target.value);\n  };\n\n  const addToDo = (e) => {\n    e.preventDefault();\n    if (newTask !== \"\") {\n        setAddedTasks(prev => [...prev, {name: newTask, checked: false, edited: false}]);\n    }\n    setNewTask('');\n  };\n\n  return (\n    <div>\n      <form>\n        <button onClick={addToDo} className=\"addButton\"> + </button>\n        <input value={newTask} onChange={newToDo} type=\"text\" className=\"addToDoBar\" placeholder=\"Add To-Do\" />\n        <Todo addedTasks={addedTasks} setAddedTasks={setAddedTasks} />\n      </form>\n    </div>\n  );\n}\n\nexport default TodoList;\n","import './App.css';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"appTitle\">To-Do List</h1>\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}