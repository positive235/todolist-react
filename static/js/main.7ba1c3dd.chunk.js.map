{"version":3,"sources":["components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","addedTasks","setAddedTasks","filteredTasks","setFilteredTasks","useState","editedTask","setEditedTask","filterToDo","e","preventDefault","target","name","filter","task","checked","isCheckedToDo","id","Number","currentTarget","prev","editToDo","edited","handleEdit","editChecked","value","handleDone","handleCancel","deleteToDo","className","onClick","map","index","icon","faCheck","type","placeholder","onChange","faTrashAlt","faCheckCircle","faWindowClose","faEdit","TodoList","newTask","setNewTask","useEffect","storedToDo","JSON","parse","localStorage","getItem","setItem","stringify","Math","random","faPlus","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ba1c3dd.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faTrashAlt, faEdit, faWindowClose, faCheckCircle } from '@fortawesome/free-solid-svg-icons';\n\nconst Todo = ({ addedTasks, setAddedTasks, filteredTasks, setFilteredTasks })  => {\n\n  const [editedTask, setEditedTask] = useState({});\n  \n  const filterToDo = (e) => {\n    e.preventDefault();\n    switch (e.target.name) {\n      case \"all\":\n        setFilteredTasks(addedTasks);\n        break;\n      case \"active\":\n        setFilteredTasks(addedTasks.filter(task => task.checked === false));\n        break;\n      case \"done\":\n        setFilteredTasks(addedTasks.filter(task => task.checked === true));\n        break;\n      default:\n        setFilteredTasks(addedTasks.filter(task => task.checked === false));\n        break;\n    }\n  }\n\n  const isCheckedToDo = (e) => {\n    e.preventDefault();\n    addedTasks.filter(task => task.id === Number(e.currentTarget.name))[0].checked = !addedTasks.filter(task => task.id === Number(e.currentTarget.name))[0].checked\n    setAddedTasks(prev => [...prev]);\n    setFilteredTasks(addedTasks.filter(task => task.checked === false));\n  };\n\n  const editToDo = (e) => {\n    e.preventDefault();\n    addedTasks.filter(task => task.id === Number(e.currentTarget.name))[0].edited = true;\n    setAddedTasks(prev => [...prev]);\n    setFilteredTasks(addedTasks);\n  }\n\n  const handleEdit = (e) => {\n    e.preventDefault();\n    const editChecked = addedTasks.filter(task => task.id === Number(e.currentTarget.name))[0].checked;\n    setEditedTask({name: e.currentTarget.value, checked: editChecked, edited: false, id: Number(e.currentTarget.name)});\n  }\n\n  const handleDone = (e) => {\n    e.preventDefault();\n    addedTasks.filter(task => task.id === Number(e.currentTarget.name))[0].name = editedTask.name;\n    addedTasks.filter(task => task.id === Number(e.currentTarget.name))[0].edited = editedTask.edited;\n    setAddedTasks(prev => [...prev]);\n    setFilteredTasks(addedTasks);\n    setEditedTask({});\n  }\n\n  const handleCancel = (e) => {\n    e.preventDefault();\n    addedTasks.filter(task => task.id === Number(e.currentTarget.name))[0].edited = false;\n    setAddedTasks(prev => [...prev]);\n    setFilteredTasks(addedTasks.filter(task => task.checked === false));\n  }\n\n  const deleteToDo = (e) => {\n      e.preventDefault();\n      addedTasks = addedTasks.filter(task => task.id !== Number(e.currentTarget.name));\n      setAddedTasks(addedTasks);\n      setFilteredTasks(addedTasks.filter(task => task.checked === false));\n  };\n\n  return (\n    <div className=\"toDoOuterBlock\">\n      <div className=\"filterButtons\">\n        <button className=\"allButton\" name=\"all\" onClick={filterToDo}>All</button><button className=\"activeButton\" name=\"active\" onClick={filterToDo}>Active</button><button className=\"completedButton\" name=\"done\" onClick={filterToDo}>Done</button>\n      </div>\n      {filteredTasks.map((task, index) => (\n          <div className=\"toDoBlock\">\n            {task.edited ? (<div></div>) : (<button className=\"toDoButton checkButton\" onClick={isCheckedToDo} name={task.id}><FontAwesomeIcon icon={faCheck} /></button>)}\n            {task.edited ? (<input type=\"text\" className=\"editToDoBar\" name={task.id} placeholder={task.name} onChange={handleEdit}/>) : (<h3 className={task.checked ? \"isChecked\" : \"notChecked\"}>{task.name}</h3>)}\n            {task.edited ? (<div></div>) : (<button className=\"toDoButton deleteButton\" name={task.id} id={index} onClick={deleteToDo}><FontAwesomeIcon name={task.id} icon={faTrashAlt} /></button>)}\n            {task.edited ? (<div><button className=\"doneButton\" name={task.id} onClick={handleDone}><FontAwesomeIcon icon={faCheckCircle} /></button><button className=\"cancelButton\" name={task.id} onClick={handleCancel}><FontAwesomeIcon name={task.id} icon={faWindowClose} /></button></div>) : (<button className=\"toDoButton editButton\" name={task.id} onClick={editToDo}><FontAwesomeIcon name={task.id} icon={faEdit} /></button>)}\n          </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Todo;","import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport Todo from './Todo';\n\nconst TodoList = () => {\n\n  const [newTask, setNewTask] = useState('');\n  const [addedTasks, setAddedTasks] = useState([]);\n  const [filteredTasks, setFilteredTasks] = useState(addedTasks);\n\n  useEffect(() => {\n    const storedToDo = JSON.parse(localStorage.getItem('toDoLists'));\n    if (storedToDo) setAddedTasks(storedToDo);\n    if (storedToDo) setFilteredTasks(storedToDo.filter(task => task.checked === false));\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('toDoLists', JSON.stringify(addedTasks));\n  }, [addedTasks]);\n\n\n  const newToDo = (e) => {\n    setNewTask(e.target.value);\n  };\n\n  const addToDo = (e) => {\n    e.preventDefault();\n    const id = Math.random() * 100\n    if (newTask !== \"\") {\n        setAddedTasks(prev => [...prev, {name: newTask, checked: false, edited: false, id: id}]);\n        setFilteredTasks(prev => [...prev, {name: newTask, checked: false, edited: false, id: id}]);\n    }\n    \n    setNewTask('');\n  };\n\n  return (\n    <div>\n      <form>\n        <div className=\"addBarButtonStyle\">\n          <input value={newTask} onChange={newToDo} type=\"text\" className=\"addToDoBar\" placeholder=\"Add To-Do\" />\n          <button onClick={addToDo} className=\"addButton\"><FontAwesomeIcon icon={faPlus} /></button>\n        </div>\n        <Todo addedTasks={addedTasks} setAddedTasks={setAddedTasks} filteredTasks={filteredTasks} setFilteredTasks={setFilteredTasks} />\n      </form>\n    </div>\n  );\n}\n\nexport default TodoList;\n","import './App.css';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"appTitle\">To-Do List</h1>\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}